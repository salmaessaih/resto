const express = require('express');
const router = express.Router();
const restaurantController = require('../controllers/restaurantController');
const auth = require('../middleware/auth'); // Middleware d'authentification
const isAdmin = require('../middleware/isAdmin'); // Middleware pour vÃ©rifier si l'utilisateur est admin

// ğŸ”¹ CrÃ©er un restaurant (ADMIN uniquement)
router.post('/', auth, isAdmin, restaurantController.createRestaurant);

// ğŸ”¹ RÃ©cupÃ©rer tous les restaurants (Accessible aux utilisateurs authentifiÃ©s)
router.get('/', auth, restaurantController.getAllRestaurants);

// ğŸ”¹ RÃ©cupÃ©rer un restaurant par ID (Accessible aux utilisateurs authentifiÃ©s)
router.get('/:id', auth, restaurantController.getRestaurantById);

// ğŸ”¹ Mettre Ã  jour un restaurant (ADMIN uniquement)
router.put('/:id', auth, isAdmin, restaurantController.updateRestaurant);

// ğŸ”¹ Supprimer un restaurant (ADMIN uniquement)
router.delete('/:id', auth, isAdmin, restaurantController.deleteRestaurant);

module.exports = router;